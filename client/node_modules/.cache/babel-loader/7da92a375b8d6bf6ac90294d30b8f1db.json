{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: `http://localhost:3000/`,\n  withCredentials: false,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  },\n  timeout: 100000\n});\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null;\n\n  if (token) {\n    config.headers.Authorization = `${token}`;\n  }\n\n  return config;\n}, error => Promise.reject(error));\napiClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response.status === 403) {\n    window.location.href = '/login';\n  }\n\n  if (error.response.status === 401) {\n    window.location.href = '/login';\n  }\n\n  return Promise.reject(error);\n});\n\nclass postAPI {\n  //WEB PAGESS\n  static getWebImages() {\n    return apiClient.get(`/website/category`);\n  }\n\n  static getWebStories() {\n    return apiClient.get(`/website/stories`);\n  }\n\n  static sendEmail(data) {\n    return apiClient.get(`/website/stories`, data);\n  } // POSTS\n\n\n  static getPosts(category) {\n    return apiClient.get(`apiPost/${category}`);\n  } //Create post\n\n\n  static createPost(data) {\n    return apiClient.post(`apiPost`, data);\n  } //Update post\n\n\n  static editPost(id, data) {\n    return apiClient.patch(`apiPost/${id}`, data);\n  } //Delete post\n\n\n  static deletePost(id) {\n    return apiClient.delete(`apiPost/${id}`);\n  } //Delete all posts\n\n\n  static deletePostAll(category) {\n    return apiClient.delete(`apiPost/deleteAll/all/${category}`);\n  } //Login\n\n\n  static logIn(data) {\n    return axios.post(`http://localhost:3000/apiUsers`, data);\n  } // CARDS\n\n\n  static getCards() {\n    return apiClient.get(`apiCard/`);\n  } //get one card\n\n\n  static getCard(id) {\n    return apiClient.get(`apiCard/${id}`);\n  } //Create post\n\n\n  static createCard(data) {\n    return apiClient.post(`apiCard`, data);\n  } //Update post\n\n\n  static editCard(id, data) {\n    return apiClient.patch(`apiCard/${id}`, data);\n  } //Delete post\n\n\n  static deleteCard(id) {\n    return apiClient.delete(`apiCard/${id}`);\n  } //Delete all posts\n\n\n  static deleteCardAll() {\n    return apiClient.delete(`apiCard/deleteAll/all`);\n  } //Create post\n\n\n  static addImages(data) {\n    return apiClient.post(`apiCard/details`, data);\n  } // CARDS Gallery\n  //Create post\n  //Update post\n\n\n  static editImage(id, data, image) {\n    return apiClient.patch(`apiCardGallery/${id}/${data}`, image);\n  } //Delete post\n\n\n  static deleteImage(data) {\n    return apiClient.delete(`apiCardGallery/${data.id}/${data.image}`);\n  } //Delete all posts\n\n\n  static deleteImageAll(id) {\n    return apiClient.delete(`apiCardGallery/deleteAll/all/${id}`);\n  }\n\n}\n\nexport default postAPI;","map":{"version":3,"names":["axios","apiClient","create","baseURL","withCredentials","headers","Accept","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","window","location","href","postAPI","getWebImages","get","getWebStories","sendEmail","data","getPosts","category","createPost","post","editPost","id","patch","deletePost","delete","deletePostAll","logIn","getCards","getCard","createCard","editCard","deleteCard","deleteCardAll","addImages","editImage","image","deleteImage","deleteImageAll"],"sources":["/home/rade/finalAp/anawed/client/src/services/service.js"],"sourcesContent":["import axios from 'axios'\n\n\nconst apiClient = axios.create({\n    baseURL: `http://localhost:3000/`,\n    withCredentials: false, \n    headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n    },\n    timeout: 100000,\n});\n\napiClient.interceptors.request.use(\n    config => {\n      const token = localStorage.getItem(\"token\") ? localStorage.getItem(\"token\") : null\n      if (token) {\n        config.headers.Authorization = `${token}`;\n      }\n      return config;\n    },\n    error => Promise.reject(error)\n  );\n\napiClient.interceptors.response.use(response => {\n    return response\n    },\n    error => {\n        if (error.response.status === 403) {\n            window.location.href = '/login'\n        }\n        if (error.response.status === 401) {\n            window.location.href = '/login'\n        }\n        return Promise.reject(error);\n    });\n\n\nclass postAPI {\n\n\n\n    //WEB PAGESS\n\n    static getWebImages(){\n        return apiClient.get(`/website/category`);\n    }\n    static getWebStories(){\n        return apiClient.get(`/website/stories`);\n    }\n\n    static sendEmail(data){\n        return apiClient.get(`/website/stories`, data);\n    }\n\n    // POSTS\n\n\n    static getPosts(category){\n        return apiClient.get(`apiPost/${category}`, );\n    }\n\n    //Create post\n    static createPost(data){\n        return apiClient.post(`apiPost`,data)\n    }\n\n     //Update post\n     static editPost(id,data){\n        return apiClient.patch(`apiPost/${id}`, data);\n    }\n\n    //Delete post\n    static deletePost(id){\n        return apiClient.delete(`apiPost/${id}`)\n    }\n\n    //Delete all posts\n    static deletePostAll(category){\n        return apiClient.delete(`apiPost/deleteAll/all/${category}`)\n    }\n    //Login\n    static logIn(data){\n        return axios.post(`http://localhost:3000/apiUsers`, data)\n    }\n\n\n    // CARDS\n\n\n\n    static getCards(){\n        return apiClient.get(`apiCard/`);\n    }\n    //get one card\n    static getCard(id){\n        return apiClient.get(`apiCard/${id}`);\n    }\n\n    //Create post\n    static createCard(data){\n        return apiClient.post(`apiCard`,data)\n    }\n\n     //Update post\n     static editCard(id,data){\n        return apiClient.patch(`apiCard/${id}`, data); \n    }\n\n    //Delete post\n    static deleteCard(id){\n        return apiClient.delete(`apiCard/${id}`)\n    }\n\n    //Delete all posts\n    static deleteCardAll(){\n        return apiClient.delete(`apiCard/deleteAll/all`)\n    }\n\n     //Create post\n     static addImages(data){\n        return apiClient.post(`apiCard/details`,data)\n    }\n\n\n\n    // CARDS Gallery\n\n\n    //Create post\n\n    //Update post\n    static editImage(id,data, image){\n        return apiClient.patch(`apiCardGallery/${id}/${data}`, image);\n    }\n\n    //Delete post\n    static deleteImage(data){\n        return apiClient.delete(`apiCardGallery/${data.id}/${data.image}`)\n    }\n\n    //Delete all posts\n    static deleteImageAll(id){\n        return apiClient.delete(`apiCardGallery/deleteAll/all/${id}`)\n    }\n\n}\n\nexport default postAPI"],"mappings":"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"},"metadata":{},"sourceType":"module"}